@model DataAccess.CustomModels.CustomerMainPage;

@functions {
    public bool ischecked(int AuthorId)
    {
        return Model.filterAuthors != null && Model.filterAuthors.Contains(AuthorId);
    }

    public bool ischecked2(int catId)
    {
        return Model.filterCategory != null && Model.filterCategory.Contains(catId);
    }


}
<style>
    .dropdown {
        position: relative;
        color: #333;
        margin-bottom: 10px;
    }

        .dropdown .dropdown-list {
            padding: 12px;
            background: #fff;
            position: absolute;
            top: 30px;
            left: 0;
            right: 0;
            box-shadow: 0 1px 2px 1px rgba(0, 0, 0, .15);
            transform-origin: 50% 0;
            transform: scale(1, 0);
            transition: transform .15s ease-in-out .15s;
            max-height: 200px;
            overflow-y: auto;
            z-index: 3;
        }

        .dropdown .dropdown-option {
            display: block;
            padding: 8px 12px;
        }

        .dropdown .dropdown-label {
            display: block;
            background: #fff;
            border: 1px solid #ccc;
            border-radius: 4px;
            line-height: 1;
            cursor: pointer;
            padding: 8px 12px;
        }

        .dropdown.on .dropdown-list {
            transform: scale(1, 1);
            transition-delay: 0s;
        }

        .dropdown .dropdown-label:before {
            content: '▼';
            float: right;
        }

        .dropdown.on .dropdown-label:before {
            content: '▲';
        }

    .searchbar {
        margin-bottom: 20px;
        border-bottom: 1px solid #ccc;
        padding-bottom: 10px;
    }

    .form-group {
        margin-bottom: 10px;
    }

    .btn-primary {
        margin-right: 10px;
    }
</style>

<div class="">
    <div class="bookCategory d-flex w-100">
        <h3 class="my-2 ms-1 w-100">All Books</h3>
        <div aria-live="polite" aria-atomic="true" style="position: relative; min-height: 50px;" class="d-flex justify-content-end w-100">
            <div class="toast bg-success-subtle " style="position: absolute; top: 0; right: 0;" data-delay="5000">
                <div class="toast-body d-flex">
                </div>
            </div>
        </div>
    </div>
    <div class="mx-0 mt-3 p-3">
        <div class="searchbar m-0">
            <form id="searchForm" class="mb-2 gy-2 row">
                <div class="col-md-3 col-6">
                    <input asp-for="@Model.searchByBookName" type="text" class="form-control" id="bookTitle" placeholder="Book Title">
                </div>

                <div class="form-group col-md-3 col-6">
                    <div class="dropdown" data-control="checkbox-dropdown">
                        <label class="dropdown-label">Authors</label>
                        <div class="dropdown-list">
                            @foreach (var i in Model.Authors)
                            {
                                <label class="dropdown-option">
                                    <input class="AuthorData" type="checkbox" name="dropdown-group" checked="@ischecked(i.Authorid)" value="@i.Authorid" />
                                    @i.Name
                                </label>
                            }
                        </div>
                    </div>
                </div>

                <div class="form-group col-md-3 col-6">
                    <div class="dropdown" data-control="checkbox-dropdown">
                        <label class="dropdown-label">Categories</label>
                        <div class="dropdown-list">
                            @foreach (var i in Model.Categories)
                            {
                                <label class="dropdown-option">
                                    <input class="categorytdata" type="checkbox" name="dropdown-group" checked="@ischecked2(i.Categoryid)" value="@i.Categoryid" />
                                    @i.Categoryname
                                </label>
                            }
                        </div>
                    </div>
                </div>

                <div class=" col-md-3 col-6">
                    <input asp-for=@Model.searchByPublisher type="text" class=" form-control" id="bookPublisher" placeholder="Publisher Name">
                </div>

                <div class="form-group d-flex justify-content-end col-md-12 mt-3">
                    <button type="button" class="btn btn-primary" onclick="fetchSearchData()">Search</button>
                    <button type="reset" class="btn btn-secondary" onclick="GetCustomerDashboard()">Reset</button>
                </div>
                <input type="text" id="pageNumber" asp-for="PageNumber" hidden />
                <input type="text" id="BookCount" asp-for="BookCount" hidden />
            </form>
        </div>
    </div>
</div>
<div class="container-fluid" style="height:80vh;">
    <div id="dashTable">
        <div class=" ">
            <div class="table row d-flex justify-content-center container-fluid " id="book-list">
            </div>
        </div>

    </div>
    <div class="w-100 h-auto d-flex justify-content-center">

        <div class="" role="status" id="loader" style="display:none">
            <img src="~/backgroundImages/loader.gif" width="70" height="70" alt="img" />
        </div>

    </div>
</div>



<script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=" crossorigin="anonymous"></script>

<script>
    (function ($) {
        var CheckboxDropdown = function (el) {
            var _this = this;
            this.$el = $(el);
            this.$label = this.$el.find('.dropdown-label');
            this.$inputs = this.$el.find('[type="checkbox"]');



            this.$label.on('click', function (e) {
                e.preventDefault();
                _this.toggleOpen();
            });

            this.$inputs.on('change', function (e) {
                _this.onCheckBox();
            });
        };

        CheckboxDropdown.prototype.onCheckBox = function () {
            this.updateStatus();
        };

        CheckboxDropdown.prototype.updateStatus = function () {
            var checked = this.$el.find(':checked');



        };

        // Method to handle "Check All" functionality
        CheckboxDropdown.prototype.onCheckAll = function (checkAll) {
            if (!this.areAllChecked || checkAll) {
                this.areAllChecked = true;
                this.$checkAll.html('Uncheck All');
                this.$inputs.prop('checked', true);
            }
            else {
                this.areAllChecked = false;
                this.$checkAll.html('Check All');
                this.$inputs.prop('checked', false);
            }

            this.updateStatus();
        };

        CheckboxDropdown.prototype.toggleOpen = function (forceOpen) {
            var _this = this;
            if (!this.$el.hasClass('on')) {
                this.$el.addClass('on');
                $(document).on('click', function (e) {
                    if (!$(e.target).closest('[data-control]').length) {
                        _this.toggleOpen();
                    }
                });
            } else if (this.$el.hasClass('on')) {
                this.$el.removeClass('on');
                $(document).off('click');
            }
        };

        var checkboxesDropdowns = document.querySelectorAll('[data-control="checkbox-dropdown"]');
        for (var i = 0, length = checkboxesDropdowns.length; i < length; i++) {
            new CheckboxDropdown(checkboxesDropdowns[i]);
        }
    })(jQuery);

</script>
<script>

    var pageNumber = 1;
    var pageSize = 6;

    function isScrolledToBottom() {
        return $(window).scrollTop() + $(window).height() >= $(document).height();
    }

    $(document).ready(function () {
         var toastMessage = '@TempData["ToastMessage"]';
        if (toastMessage !== '') {
            var delay = 5000;
            var toastTypeClass = toastMessage.toLowerCase().includes('Invalid') ? 'toast-error' : 'toast-success';
            $('.toast-body').text(toastMessage);
            $('.toast').toast({ delay: delay });
            $('.toast').toast('show');
        }

        var bookCount = $('#BookCount').val();
        var lastPageNumber = Math.ceil(bookCount / pageSize);
        $('#pageNumber').val(pageNumber)
        fetchMoreData(pageNumber);




        $(document).scroll(function () {
            if (isScrolledToBottom()) {
                if (pageNumber < lastPageNumber + 1) {

                    pageNumber++;

                    $('#pageNumber').val(pageNumber)
                    fetchMoreData(pageNumber);
                }


                console.log("last page:" + lastPageNumber)

            }
        });

    })

    function buildBookCard(obj) {
        var html = `<div class="col-xl-2 col-lg-4 col-md-4 col-sm-6 gy-3">
                                <div class="card border-0 h-100 shadow">
                                    <img src="/BookListCollections/${obj.bookPhoto}" class="card-img-top rounded-top p-0" width="50" height="300" alt="${obj.bookPhoto}">
                                    <div class="card-body">
                                        <h5 class="card-title text-truncate">${obj.title}</h5>
                                        <strong class="card-title text-danger fs-4">${obj.price} $</strong>
                                        <p class="card-text text-truncate px-1">Author: ${obj.authorName}</p>
                                            <h4 class="text-muted my-0">${obj.discount} % Off</h4>
                                    </div>
                                    <div class="ratings">`;

        for (var i = 1; i <= 5; i++) {
            if (i <= obj.avgRating) {
                html += `<i class="bi bi-star-fill fs-5 text-warning"></i>`;
            } else if (i - 0.5 <= obj.avgRating) {
                html += `<i class="bi bi-star-half fs-5 text-warning"></i>`;
            } else {
                html += `<i class="bi bi-star fs-5 text-warning"></i>`;
            }
        }

        html += `</div>
                        <div class="d-flex gap-2">
                            <button class="btn btn-primary" onclick="ViewBookDetails(${obj.bookId})">View More</button>
                        </div>
                    </div>
                </div>`;

        return html;
    }

    function fetchMoreData(pageNumber) {
        
        var chkAuthor = document.querySelectorAll(".AuthorData:checked");
        var chkCategory = document.querySelectorAll(".categorytdata:checked");
        var formData = new FormData($('#searchForm')[0]);

        chkAuthor.forEach(function (checkbox) {
            formData.append('filterAuthors', checkbox.value);
        });

        chkCategory.forEach(function (checkbox) {
            formData.append('filterCategory', checkbox.value);
        });

        $('#pageNumber').val(pageNumber)
   

        $.ajax({
            url: "/Home/CustomerDashBookList",
            type: "POST",
            data: formData,
            contentType: false,
            processData: false,

            success: function (result) {
                if (result.length > 0) {
                    result.forEach(function (obj) {
                        var html = buildBookCard(obj);


                        $('#book-list').append(html);


                    });

                } else {

                }
                isLoading = false;
            },
            error: function (err) {
                $('#loader').hide();
                alert('Error loading partial view');
                isLoading = false;
            }
        });

    }


    function fetchSearchData() {
        $('#book-list').empty();
        $('#pageNumber').val('');

        pageNumber = 1;
        var bookCount = $('#BookCount').val();
        $('#pageNumber').val(pageNumber)
        isLoading = true;
        var chkAuthor = document.querySelectorAll(".AuthorData:checked");
        var chkCategory = document.querySelectorAll(".categorytdata:checked");
        var formData = new FormData($('#searchForm')[0]);

        chkAuthor.forEach(function (checkbox) {
            formData.append('filterAuthors', checkbox.value);
        });

        chkCategory.forEach(function (checkbox) {
            formData.append('filterCategory', checkbox.value);
        });

        formData.append('PageNumber', pageNumber);


        $.ajax({
            url: "/Home/CustomerDashBookList",
            type: "POST",
            data: formData,
            contentType: false,
            processData: false,
            beforeSend: function () {
                $('#loader').show(); // Show loader before request
            },
            success: function (result) {
                $('#loader').hide(); // Hide loader on success
                if (result.length > 0) {
                    result.forEach(function (obj) {
                        var html = buildBookCard(obj);


                        $('#book-list').append(html);
                    });
                } else {

                    console.log("No more data to load.");
                }
                isLoading = false;
            },
            error: function (err) {
                $('#loader').hide();
                alert('Error loading partial view');
                isLoading = false;
            }
        });

    }

</script>

<script>
    $(document).ready(function () {
       
    });

</script>


<div id="Modaldata"></div>
